package com.smhrd.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.smhrd.db.BoardMapper;
import com.smhrd.model.BoardVO;
import com.smhrd.model.SearchCriteria;

@RestController
public class BoardRestController {

	// 비동기 통신으로 요청이 들어왔을때 처리해주는 역할
	@Autowired
	private BoardMapper mapper;

	///////////////////////////차트정보///////////////////////////////
	@RequestMapping("/artist")
	public String artist() {
		
		
		return null;
	}

	////////////////////////////자동완성/////////////////////////////

	@RequestMapping("/autocomplete")
	// @ResponseBody --> @RestController가 있으므로 안써도 된다

	public List<BoardVO> autocomplete(SearchCriteria criteria) {
		// 리턴타입이나 매개변수의 자료형은 자유롭게 설정
		// --> 내가 handling하기 편한 자료형으로 지정하는게 좋다

		List<BoardVO> result = mapper.autocomplete(criteria);

		return result;
	}

	////////////////////////////// 게시물 검색 ////////////////////////

	// 비동기 통신으로 검색하는 기능

	@RequestMapping("/search")
	// 해당 메소드는 화면을 이동시키는 메소드가 아니라, 결과값을 화면에 출력해주는 메소드
	// 리턴해주는 데이터를 화면에 출력함
	// @ResponseBody
	public List<BoardVO> search(SearchCriteria criteria) {
		System.out.println("수집데이터>>" + criteria);
		List<BoardVO> list = mapper.search(criteria);
		// list는 레퍼런스 변수이므로 리턴값에 주소가 담겨있다 -> 화면에 주소 출력됨
		// -> 주소는 json형태가 아니기 때문에 json형태로 바꿔야한다
		// (비동기 통신으로 보내줘야하는 데이터는 json구조)
		// Spring은 라이브러리만 설치하면 Gson을 사용하여 바꿔줬던 절차를 알아서 해준다

		return list;
	}

}
